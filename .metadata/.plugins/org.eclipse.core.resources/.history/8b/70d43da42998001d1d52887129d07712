package nodes;

public class switchNode extends treeNode{

	// private String var;
	public switchNode() {}
	public switchNode(String v) {}

	@Override
	public Object execute() {
		System.out.println("hi from switchNode");


//		if (!assignNode.variables.containsKey(this.var))
//		{
//			System.out.println("undefiend variable");
//			return null;
//		}

		// this.val = (valueNode)assignNode.variables.get(this.var);

		int defaultExists = 0;

		// Figure out if there's a default case
		if (children.size() % 2 != 0)
			defaultExists = 1;

		boolean matched = false;
		for (int i = 0; i < children.size() - defaultExists; i++) {
			matched = (boolean)children.get(i).execute();
			if (matched) {
				System.out.println("switchNode matched and executed blockNode");
				return null;
			}
		}
		if (defaultExists == 1)
		{
			System.out.println("default case executed");
			children.get(children.size() - 1).execute();
			return null;
		}
		return null;
	}
}
